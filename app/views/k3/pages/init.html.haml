- k3_ribbon_add_drawer :new_page do
  %h2 New Page
  = form_for K3::Page.new do |f|
    .field
      Title:
      = f.text_field :title
    = f.submit 'Create'

:javascript
  $(function() {
    $('#k3_ribbon').k3_ribbon({tabs: [
      new K3_Ribbon.Tab('k3_pages', {label: 'Page', sections: [
        new K3_Ribbon.Section('main', {items: [
          new K3_Ribbon.Button({
            element: $('<li/>', { class: "icon button new_page" }).
              append($('<a/>', {title: "New Page", href: "javascript:;", html: '&nbsp;'})),
            onClick:  function() { $(this).k3_ribbon('isEnabled') && $(this).trigger('invoke'); },
            onInvoke: function() { $('.new_page.drawer').slideToggle(); $('.new_page.drawer :input:visible:eq(0)').focus() }
          }),
          new K3_Ribbon.Button({
            element: $('<li/>', { class: "icon button page_metadata" }).
              append($('<a/>', {title: "Page Information", href: "javascript:;", html: '&nbsp;'})),
            onClick:  function() { $(this).k3_ribbon('isEnabled') && $(this).trigger('invoke'); },
            onInvoke: function() { $('.k3_page_metadata.drawer').slideToggle(); $('.k3_page_metadata.drawer .editable:visible:eq(0)').focus() }
          }),
          new K3_Ribbon.Button({
            element: $('<li/>', { class: "icon button page_delete" }).
              append($('<a/>', {title: "Delete Page", href: "javascript:;", html: '&nbsp;', 'data-method': "delete" })),
            // This gets called before Rails' click handler, so we can (and have to, unless you know another way) use it to disable/enable Rails' default behavior
            onMousedown: function(event) {
              var a = $(this).find('a').eq(0);
              if ($(this).k3_ribbon('isEnabled') && K3.current_object) {
                a.attr('data-confirm', "Are you sure you want to delete this page?");
                a.attr('href', K3.current_object.url);
              } else {
                a.removeAttr('data-confirm');
                // Disable the hidden form by setting its action to a no-op
                a.attr('href', 'javascript:;');
              }
            },
          }),
          new K3_Ribbon.Button({
            element: $('<li/>', { class: "icon button page_list" }).
              append($('<a/>', {title: "List Pages", href: "#{k3_pages_path}", html: '&nbsp;'})),
            onMousedown: function(event) {
              var a = $(this).find('a').eq(0);
              if ($(this).k3_ribbon('isEnabled')) {
                a.attr('href', a.data('href'));
              } else {
                a.data('href', a.attr('href'));
                a.attr('href', 'javascript:;');
              }
            },
          }),
        ]})
      ]})
    ]})
    $('#k3_ribbon').k3_ribbon({
      always_enabled: [
        '.k3_pages .new_page.button',
        '.k3_pages .page_list.button',
      ]
    });
  })

